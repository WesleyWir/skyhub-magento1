<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */
class BSeller_SkyHub_Adminhtml_Bseller_Skyhub_Sales_Order_ImportController
    extends BSeller_SkyHub_Controller_Admin_Queue
{
    
    public function formAction()
    {
        $this->init('Import Manually');
        $this->renderLayout();
    }
    
    
    public function submitAction()
    {
        $codes = $this->getCleanedOrderCodes();
        
        if (empty($codes)) {
            $this->redirectBack();
            return;
        }
        
        /** @var string $code */
        foreach ($codes as $code) {
            $this->importOrder($code);
        }
        
        $this->redirectBack();
    }
    
    
    /**
     * See the log.
     */
    public function logAction()
    {
        $this->init('Import Log');
        $this->renderLayout();
    }
    
    
    /**
     * Delete Unique Queue ID.
     */
    public function deleteAction()
    {
        $queueId = (int) $this->getRequest()->getParam('id');
        
        $this->deleteQueueIds($queueId);
        $this->redirectBack();
    }
    
    
    /**
     * Delete a bunch of queue IDs.
     */
    public function massDeleteAction()
    {
        $queueIds = (array) $this->getRequest()->getPost('queue_ids');
        
        $this->deleteQueueIds($queueIds);
        $this->redirectBack();
    }
    
    
    public function retryAction()
    {
        $queueId = (int) $this->getRequest()->getParam('id');
    
        if ($queueId) {
            $this->importOrderByQueueId($queueId);
        }
    
        $this->redirectBack();
    }
    
    
    /**
     * Retry to import the failed orders.
     *
     * @throws Exception
     * @throws Mage_Core_Exception
     */
    public function massRetryAction()
    {
        $queueIds = (array) $this->getRequest()->getPost('queue_ids');
        
        foreach ($queueIds as $queueId) {
            if (empty($queueId)) {
                continue;
            }
            
            $this->importOrderByQueueId($queueId);
        }
        
        $this->redirectBack();
    }
}
