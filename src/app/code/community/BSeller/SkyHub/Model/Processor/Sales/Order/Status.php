<?php

/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */
class BSeller_SkyHub_Model_Processor_Sales_Order_Status extends BSeller_SkyHub_Model_Integrator_Abstract
{
    /**
     * @param string $skyhubStatusCode
     * @param string $skyhubStatusType
     * @param Mage_Sales_Model_Order $order
     *
     * @return bool|$this
     */
    public function processOrderStatus($skyhubStatusCode, $skyhubStatusType, Mage_Sales_Model_Order $order, array $orderData)
    {
        if ($order->hasInvoice() && $order->hasShipments()) {
            return true;
        }

        if (!$this->validateOrderStatusType($skyhubStatusType)) {
            return false;
        }

        $state = $this->getStateBySkyhubStatusType($skyhubStatusType);

        //if the state is the same, means there's no order movement, so keep it in track;
        if ($order->getState() == $state) {
            return false;
        }

        $result = false;

        /**
         * If order is CANCELED in SkyHub.
         */
        if ($state == Mage_Sales_Model_Order::STATE_CANCELED) {
            $this->cancelOrder($order);
            $result = true;
        }

        /**
         * If order is APPROVED in SkyHub.
         */
        if ($state == Mage_Sales_Model_Order::STATE_PROCESSING && $order->canInvoice()) {
            $this->invoiceOrder($order);
            $result = false;
        }

        /**
         * If order is SHIPPED in SkyHub.
         */
        if ($state == Mage_Sales_Model_Order::STATE_COMPLETE && $order->canShip()) {
            $trackingNumber = $this->arrayExtract($orderData, 'trackingNumber');
            $this->shipOrder($order, $trackingNumber);
            //we can't set state "complete" manually because magento don't allow this;
            //shipping created will automatically set order state to "complete";
            return true;
        }

        $message = $this->__(
            'Change automatically by SkyHub. Status %s, Type %s.',
            $skyhubStatusCode,
            $skyhubStatusType
        );

        $order->setState($state, true, $message);
        $order->save();
        return $result;
    }


    /**
     * @param string $skyhubStatusType
     *
     * @return string
     */
    public function getStateBySkyhubStatusType($skyhubStatusType)
    {
        switch ($skyhubStatusType) {
            case BSeller_SkyHub_Model_System_Config_Source_Skyhub_Status_Types::TYPE_APPROVED:
                return Mage_Sales_Model_Order::STATE_PROCESSING;
            case BSeller_SkyHub_Model_System_Config_Source_Skyhub_Status_Types::TYPE_CANCELED:
                return Mage_Sales_Model_Order::STATE_CANCELED;
            case BSeller_SkyHub_Model_System_Config_Source_Skyhub_Status_Types::TYPE_DELIVERED:
            case BSeller_SkyHub_Model_System_Config_Source_Skyhub_Status_Types::TYPE_SHIPPED:
                return Mage_Sales_Model_Order::STATE_COMPLETE;
            case BSeller_SkyHub_Model_System_Config_Source_Skyhub_Status_Types::TYPE_NEW:
            default:
                return Mage_Sales_Model_Order::STATE_NEW;
        }
    }


    /**
     * @param string $skyhubStatusType
     *
     * @return bool
     */
    public function validateOrderStatusType($skyhubStatusType)
    {
        /** @var BSeller_SkyHub_Model_System_Config_Source_Skyhub_Status_Types $source */
        $source = Mage::getModel('bseller_skyhub/system_config_source_skyhub_status_types');
        $allowedTypes = $source->toArray();

        return isset($allowedTypes[$skyhubStatusType]);
    }


    /**
     * @param Mage_Sales_Model_Order $order
     *
     * @return bool
     *
     * @throws Exception
     */
    protected function cancelOrder(Mage_Sales_Model_Order $order)
    {
        if (!$order->canCancel()) {
            $order->addStatusHistoryComment(
                $this->__('Order is canceled in SkyHub but could not be canceled in Magento.')
            );

            $order->save();

            return false;
        }

        $order->addStatusHistoryComment($this->__('Order canceled automatically by SkyHub.'));

        $order->cancel()->save();

        return true;
    }


    /**
     * @param Mage_Sales_Model_Order $order
     *
     * @return bool
     *
     * @throws Exception
     */
    protected function invoiceOrder(Mage_Sales_Model_Order $order)
    {
        if (!$order->canInvoice()) {
            $comment = $this->__('This order is APPROVED in SkyHub but cannot be invoiced in Magento.');
            $order->addStatusHistoryComment($comment, true);
            $order->save();

            return false;
        }

        /** @var Mage_Sales_Model_Order_Invoice $invoice */
        $invoice = $order->prepareInvoice();
        $invoice->register();

        $comment = $this->__('Invoiced automatically via SkyHub.');
        $invoice->addComment($comment);

        $order->setIsInProcess(true);
        $order->setStatus($this->getApprovedOrdersStatus());
        $order->addStatusHistoryComment($comment, true);

        /** @var Mage_Core_Model_Resource_Transaction $transaction */
        $transaction = Mage::getResourceModel('core/transaction');
        $transaction->addObject($order)
            ->addObject($invoice)
            ->save();

        return true;
    }

    /**
     * @param Mage_Sales_Model_Order $order
     *
     * @return bool
     *
     * @throws Exception
     */
    protected function shipOrder(Mage_Sales_Model_Order $order, $trackingNumber)
    {
        if (!$order->canShip() || !$trackingNumber) {
            throwException('Can\'t create shipment, no has tracking code or order not allowed');
        }

        $items = array();

        foreach ($order->getAllItems() as $item) {
            $items[$item->getId()] = $item->getQtyOrdered();
        }

        $shipment = Mage::getModel('sales/service_order', $order)->prepareShipment($items);

        $dataTracking = array(
            'carrier_code' => 'custom',
            'title' => $order->getShippingDescription(),
            'number' => $trackingNumber
        );

        /** @var Mage_Sales_Model_Order_Shipment_Track $track */
        $track = Mage::getModel('sales/order_shipment_track')->addData($dataTracking);
        $shipment->addTrack($track);

        $shipment->setEmailSent(true);
        $shipment->sendEmail(true);
        $shipment->getOrder()->setCustomerNoteNotify(true);
        $shipment->register();
        $shipment->getOrder()->setIsInProcess(true);

        Mage::getModel('core/resource_transaction')
            ->addObject($shipment)
            ->addObject($shipment->getOrder())
            ->save();
        return $this;
    }
}
