<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */
trait BSeller_SkyHub_Model_Catalog_Product_Type_Common
{
    
    use BSeller_SkyHub_Trait_Data;
    
    
    /**
     * @param Varien_Object                        $buyRequest
     * @param BSeller_SkyHub_Model_Catalog_Product $product
     * @param string                               $processMode
     *
     * @return array|string
     */
//    protected function _prepareProduct(Varien_Object $buyRequest, $product, $processMode)
//    {
//        $config   = (array) $buyRequest->getData('config');
//        $products = parent::_prepareProduct($buyRequest, $product, $processMode);
//
//        if (!is_array($products)) {
//            return $products;
//        }
//
//        /** @var Mage_Catalog_Model_Product $childProduct */
//        foreach ($products as $childProduct) {
//            $this->setProductPrices($childProduct, $config);
//            $childProduct->setData('product_config', $config);
//        }
//
//        return $products;
//    }
    
    
    /**
     * @param BSeller_SkyHub_Model_Catalog_Product $product
     * @param array                                $config
     *
     * @return BSeller_SkyHub_Model_Catalog_Product
     */
    protected function setProductPrices(Mage_Catalog_Model_Product $product, array $config)
    {
        $prices   = $this->extractPrices($config);
        $children = (array) $this->arrayExtract($config, 'children');
        
        foreach ($children as $child) {
            $productId = $this->arrayExtract($child, 'product_id');
            
            if (!$productId || ($productId != $product->getId())) {
                continue;
            }
            
            $product->addData($prices);
        }
        
        return $product;
    }
    
    
    /**
     * @param array $config
     *
     * @return array
     */
    protected function extractPrices(array $config = [])
    {
        $price        = (float) $this->arrayExtract($config, 'price');
        $specialPrice = (float) $this->arrayExtract($config, 'special_price');
        $finalPrice   = (float) $this->arrayExtract($config, 'final_price');
        
        return [
            'price'         => $price,
            'special_price' => $specialPrice,
            'final_price'   => $finalPrice,
        ];
    }
}
