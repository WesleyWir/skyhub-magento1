<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  BSeller
 * @package   BSeller_SkyHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */

class BSeller_SkyHub_Model_Integrator_Sales_Order extends BSeller_SkyHub_Model_Integrator_Abstract
{

    /**
     * @param int   $page
     * @param int   $perPage
     * @param null  $saleSystem
     * @param array $statuses
     *
     * @return array|bool
     */
    public function orders($page = 1, $perPage = 30, $saleSystem = null, array $statuses = [])
    {
        /** @var \SkyHub\Api\EntityInterface\Sales\Order $interface */
        $interface = $this->api()->order()->entityInterface();
        $result    = $interface->orders($page, $perPage, $saleSystem, $statuses);

        if ($result->exception() || $result->invalid()) {
            return false;
        }

        /** @var \SkyHub\Api\Handler\Response\HandlerDefault $result */
        $orders = $result->toArray();

        if (empty($orders) || !isset($orders['orders'])) {
            return false;
        }

        return (array) $orders['orders'];
    }


    /**
     * @param int $orderId
     *
     * @return array|bool
     */
    public function order($orderId)
    {
        /** @var Mage_Sales_Model_Resource_Order $resource */
        $resource    = Mage::getResourceModel('sales/order');
        $incrementId = $resource->getIncrementId($orderId);

        /** @var  $result */
        $result = $this->getEntityInterface()->order($incrementId);

        if ($result->exception() || $result->invalid()) {
            return false;
        }

        /** @var \SkyHub\Api\Handler\Response\HandlerDefault $result */
        $order = $result->toArray();

        return (array) $order;
    }


    /**
     * @return \SkyHub\Api\EntityInterface\Sales\Order
     */
    protected function getEntityInterface()
    {
        return $this->api()->order()->entityInterface();
    }

}
