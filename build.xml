<?xml version="1.0" encoding="UTF-8"?>
<project name="BSeller_SkyHub" default="info">
    <target name="environment">
        <echo msg="Setting up the environment..." level="info"/>

        <property name="base-dir" value="."/>
        <property name="build-dir" value="${base-dir}/.build"/>
        <property name="tmp-dir" value="${base-dir}/.tmp"/>
        <property name="releases-dir" value="${base-dir}/releases"/>
    </target>
    <target name="build" depends="environment">
        <delete dir="${build-dir}" />
        <mkdir  dir="${build-dir}" />

        <copy todir="${build-dir}">
            <fileset dir="${base-dir}/src">
                <include name="app/**" />
                <include name="shell/**" />
                <include name="skin/**" />
            </fileset>
        </copy>
    </target>
    <target name="bseller-core" depends="build">
        <property name="bseller-core-dir" value="${tmp-dir}/bseller_core"/>
        <property name="bseller-core-repo" value="git@bitbucket.org:esmart/bseller_core.git"/>

        <echo msg="Cloning BSeller_Core module form ${bseller-core-repo} repository..." level="info"/>

        <delete dir="${bseller-core-dir}" />
        <mkdir  dir="${bseller-core-dir}" />

        <exec command="git clone ${bseller-core-repo} ." dir="${bseller-core-dir}"/>
        <exec outputProperty="bseller-core-latest-version" command="git describe --tags `git rev-list --tags --max-count=1`" dir="${bseller-core-dir}"/>
        <exec command="git checkout ${bseller-core-latest-version}" dir="${bseller-core-dir}"/>

        <copy todir="${build-dir}">
            <fileset dir="${bseller-core-dir}/src">
                <include name="app/**" />
                <include name="skin/**" />
            </fileset>
        </copy>

        <echo msg="Latest version of BSeller_Core module is ${bseller-core-latest-version}..." level="info"/>
    </target>
    <target name="composer" depends="bseller-core">
        <echo msg="Running composer install"/>
        <exec command="php ./bin/composer install --working-dir ./build/app/code/community/BSeller/SkyHub/"/>
    </target>
    <target name="git-prepare" depends="composer">
        <exec outputProperty="current-branch" command="git rev-parse --abbrev-ref HEAD" dir="${base-dir}"/>
        <echo msg="Your current branch is ${current-branch}..."/>

        <exec outputProperty="bseller-skyhub-latest-version" command="git describe --tags `git rev-list --tags --max-count=1`" dir="${base-dir}"/>

        <echo msg="Checking out to release TAG ${bseller-skyhub-latest-version}..."/>
        <exec command="git checkout ${bseller-skyhub-latest-version}"/>
    </target>
    <target name="package-module" depends="git-prepare">
        <property name="release-file" value="BSeller_SkyHub-${bseller-skyhub-latest-version}.zip"/>
        <delete dir="${releases-dir}/${release-file}" />
        <mkdir  dir="${releases-dir}" />
        <zip destfile="${releases-dir}/${release-file}" basedir="${build-dir}"/>
        <echo msg="Release file ${release-file} was successfully created!"/>
    </target>
    <target name="git-restore" depends="package-module">
        <echo msg="Checking out to your original branch (${current-branch})..."/>
        <exec command="git checkout ${current-branch}"/>
    </target>
    <target name="finish-build" depends="git-restore">
        <delete dir="${tmp-dir}"/>
        <delete dir="${build-dir}" />
    </target>
    <target name="info" depends="finish-build">
        <echo msg="The module was successfully packaged in ${releases-dir}/${release-file}."/>
    </target>
</project>
